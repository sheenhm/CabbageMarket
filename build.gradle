import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.0.5'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.jetbrains.kotlin.jvm' version '1.7.22'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.7.22'
	id 'com.google.cloud.tools.jib' version '3.2.0'
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.google.cloud.tools.jib' // Jib 플러그인 적용

group = 'com.sheenhm'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'com.mysql:mysql-connector-j:8.0.33'
	implementation 'javax.persistence:persistence-api:1.0.2'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '17'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

// Jib 플러그인 설정
jib {
	to {
		image = 'springbootapp'
	}
}

// Minikube 배포용 태스크
task deployToMinikube(type: Exec) {
	commandLine 'kubectl', 'apply', '-f', 'kubernetes/deployment.yaml' // 배포할 매니페스트 파일 경로
	dependsOn build // 배포하기 전에 빌드 실행
}

// Minikube 삭제용 태스크
task undeployFromMinikube(type: Exec) {
	commandLine 'kubectl', 'delete', '-f', 'kubernetes/deployment.yaml' // 삭제할 매니페스트 파일 경로
}

// 빌드 태스크 실행 시 Jib 플러그인의 build 태스크를 실행하도록 설정
build.dependsOn jib

// 배포와 삭제를 위한 그룹 태스크 설정
task deployMinikube(dependsOn: ['deployToMinikube'])
task undeployMinikube(dependsOn: ['undeployFromMinikube'])